Tell git who you are
	git config  --global user.name "radhika dua"
  	git config  --global user.email "radhikar408@gmail.com

Create a new local repositiory
	git init

Check out a repository
	git clone /path/to/repository  (Create a working copy of a local repository:)

Add files
	git add <gitcommands>(Add one or more files to staging (index):)
	git add *

Commit 
	git commit -m "commit message"  (Commit changes to head (but not yet to the remote repository))

Push
	git push origin master

Status
	git status

Connect to a remote repository
	git remote add origin <server>
	git remote -v  (list all currently configured remote repository)

Tags
	git log
	git push --tags origin

Undo local changes
	git checkout -- <gitcommands>
	git fetch origin
	git reset  --hard origin/master  (Instead, to drop all your local changes and commits, fetch the latest history from the server and point your local master branch at it, do this:)

Branches
	git checkout -b <branchname>  (Create a new branch and switch to it:)
	git checkout <branchname>  (Switch from one branch to another:)
	git branch (List all the branches in your repo, and also tell you what branch you're currently in:)
	git branch -d <branchname>  (Delete the feature branch:)
	git push origin <branchname>  (Push the branch to your remote repository, so others can use it:)
	git push --all origin  (Push all branches to your remote repository:)
	git push origin :<branchname>(Delete a branch on your remote repository:)

Updates from the remote repository
	git pull  (Fetch and merge changes on the remote server to your working directory:)
	git merge <branchname>  (To merge a different branch into your active branch:)
	git diff  (View all the merge conflicts:)
	diff -- base <filename>  (View the conflicts against the base file:)
	git add <filename>   (After you have manually resolved any conflicts, you mark the changed file:)

search
	git grep " £oo()"
gitcommands.txt
Displaying gitcommands.txt.